<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
  <display-name>Web07_Login</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
	<resource-ref>
		<description>Oracle Datasource example</description>
		<res-ref-name>jdbc/myoracle</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	
  <!-- 인코딩 필터 정의하기(Tomcat 웹서버에 알리기) -->
  <filter>
  	<filter-name>EncodingFilter</filter-name>
  	<filter-class>test.filter.EncodingFilter</filter-class>
  	<!-- 필터 초기화 파라미터 정의하기 encoding : utf-8 / 이 작업은 왜할까? ->서버가 가동되기전에 준비작업을 하는 web.xml 문서를 먼저 실행하기 때문에 문자인코딩 설정을 여기서 설정해주고 필터 클래스에서 그 내용을 반영하기 위함이다. 만약 필터 클래스에 문자 인코딩을 하드 코딩한다면 문자인코딩이 변경되는 경우 서버 가동중에 필터 클래스(소스코드)가 변경이되고 그러면 컴파일을 다시해야하고 그것을 서버에 반영해야하기 때문에 서버가 실행되기전에 web.xml 문서에 설정해놓는 것과 서버가 가동중에 문자인코딩이 변경되어 필터 클래스의 수정이 일어나는 것 둘중에 더 무거운 작업은 필터 클래스의 수정이다. -->
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>utf-8</param-value> <!-- 이 값의 변경으로 동적으로 값이 바뀜 -->
  	</init-param>
  </filter>
  <!-- 인코딩 필터 맵핑하기(어떤 요청에 대해서 필터가 동작할지 알리기) -->
  <filter-mapping>
  	<filter-name>EncodingFilter</filter-name>
  	<url-pattern>/*</url-pattern> <!-- /*의 의미는 최상위 WebContent의 하위에 있는 것 중에 클라이언트의 요청이 있다면 필터가 동작해달라는 의미 -->
  </filter-mapping>
</web-app>